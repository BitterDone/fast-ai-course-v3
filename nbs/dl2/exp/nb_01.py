
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: dev_nb/01_matmul.ipynb

from pathlib import Path
print(dir)
dirNbs = 'D:/Repos/Fast AI/fast-ai-course-v3/nbs'
dirExpNb00 = dirNbs + '/dl2/exp/nb_00.py'
newPath = Path(dirExpNb00)
print('newpath',newPath) # newpath D:\Repos\Fast AI\fast-ai-course-v3\nbs\dl2\exp\nb_01.py
 
import importlib.util
spec = importlib.util.spec_from_file_location("nb_00", newPath)
print('type spec', type(spec)) # type spec <class '_frozen_importlib.ModuleSpec'>
foo00 = importlib.util.module_from_spec(spec)
print('type foo00', type(foo00)) # type foo00 <class 'module'>
spec.loader.exec_module(foo00)
print(foo00.TEST) # test (in nb_00, TEST='test')
print(foo00) # <module 'nb_00' from 'D:\\Repos\\Fast AI\\fast-ai-course-v3\\nbs\\dl2\\exp\\nb_00.py'>

print(type(1)) # <class 'int'>
import types
if isinstance(foo00, types.ModuleType):
     print(repr(foo00), "is a module")
elif isinstance(foo00, 'module'):
     print(repr(foo00), "is a module str")
else:
     print(repr(foo00), "is not a module")
        
# from exp.nb_00 import *
# from foo00.nb_00 import * # No module named 'foo00'
import foo00 # ModuleNotFoundError: No module named 'foo00'
import operator

def test(a,b,cmp,cname=None):
    if cname is None: cname=cmp.__name__
    assert cmp(a,b),f"{cname}:\n{a}\n{b}"

def test_eq(a,b): test(a,b,operator.eq,'==')

from pathlib import Path
from IPython.core.debugger import set_trace
from fastai import datasets
import pickle, gzip, math, torch, matplotlib as mpl
import matplotlib.pyplot as plt
from torch import tensor

MNIST_URL='http://deeplearning.net/data/mnist/mnist.pkl'

def near(a,b): return torch.allclose(a, b, rtol=1e-3, atol=1e-5)
def test_near(a,b): test(a,b,near)